import asyncio
import uuid
import httpx

BATCH_ID = f"batch_{uuid.uuid4().hex}"

BATCH_BODY = f"""--{BATCH_ID}
Content-Type: application/http
Content-Transfer-Encoding: binary

GET /api/data/v9.0/emails(3170bc01-0860-f011-bec3-7c1e5283c999)?$select=safedescription HTTP/1.1
Accept: application/json
"""

async def fetch_batch_data():
    url = "https://goto.crm4.dynamics.com/api/data/v9.0/$batch"
    headers = {
        "Content-Type": f"multipart/mixed;boundary={BATCH_ID}",
        "Accept": "application/json",

        "Cookie": "CrmOwinAuth=chunks:2; CrmOwinAuthC1=MAAAAEqzwZNbWRHwjuN8HlI1xOeXD1qHPNhXJJhFr4SLeEM4bAJYae6qYSlde80FFgvI8h-LCAAAAAAABADFWVuv40ZyPsdndmzPbowNFvBLYGCAGPOQCSXeL4MdbEiJoiiJEiXqRr4ITXbzIvHelCjpZ-QhvyVP-TV5y58IpePxeBwj8VraCXUO0Wp2f1Wsrq6qr_X08PDwzaSO0k6W7SIk76vw8eHx4V3T_QT28Hvy-RKIy_355n1ofbgeH96HVZXjd-02rnCrAYNZjVspqtqQpjkeCSwhIo8iWMGlCIAokRAFRuA5QAtIdNuPD08Rxrdi3Dr_BfC86pH8pwtMg1LXdatmWlkZtGmSpNprY2R5IUrAP0ZphQJUMvStEr8GjbU3VZSgV5TA8ixDiSL3GeW_9DYhwOG3ktj15POpWDgbbtg1PMHVQE--3aJ_74E8iyOINzGokNsAfA8Y2uU8yBCI9kmChY0niS4vEi7tQd-nWQYI8HbBX3jefz52EmU65SdrmbWFOIClcBj48162TSCcGtqc5UnN486avVCCneSy1bldO9Ds-9RUc9_qcZmGJhOyCkVyZkee7UQxs_ft3bjTLufAmZ1jNhkPR4pbS-cOVZZbWCZxEQ76Gs8whnZWnfnZtroJPEBNSl1NiuxVvbdpqdJCfaj2Rl15Puu0Jz1lS4oKWEYqYrJIDbLpWlH9CZoeIEm7_bmnlNVClLt6Z7ZcsPJCH3SmMs4TsIokSr_dVO9_cDd89S3cOiYxzkB-9bsaX1yPazd_EURpFVWntheDKMFtvC9TkKAvFVAmwNvdrsdffpseQXRA6UWTlzouAYpvV-R3EaxO-Ys9RuXtYC-jHEBY_oGhWhTHtli-xYi3o76KsyBKN2ETCP7tcdLqRLNo3LXP9lYJnQ6VONtZMprPdjatVpOuUU8skjLOYehoOuVsl8mYnloDbXoytgvamXvkaB7G9lmtxl0YGRYVOnOVHc0Dxjh79Hilnsb0grXDDIL1-GSvlniUDEIvoUKbrmSHlkiXhtilB6Hb4bYuTQbRVH1_h3B8WdVvnlf19d3c7OfunkRemeHMr1pelvwP78rcLfKq514_QuX3LsszLgkg4fus34QvDxAiQ0oEx4gAupzP-fcIX6-yNC9RssERJCyCIjiCpgiRFmmaFptMzNAUL_Ec14RNRiApqZkqCQQtSfwdrJ7vI_hHiiSZZsexLC0wXZXm7pDgm3dpagmaYl1RInwW8oQLIUcwkGYIz_MgbAwrkgy6XdQfcBSkzfbAVZN0voIHb5OkwR1W5RPcLy-4XpL_LdSFyfbe6v4-SndpVqdpVd9hE30C_WKX4Oh2zO5vi_-XIPFxf74tfZ-M_NHENm2htx5zHqrMA5AH9vGcy7Og7GrEQcP2eM2pt6v8pwqlIK02JQqirLGGl-XoC3VxOzD3VwWpZy2a7fVr0G9X7vHhu-galFvuc1D-lyCrsiDOXBBf9LtdgvTbXGGfp39rzZ4OqHyiWncgPC_qpiz-3hUk322CIcEgXyJYvgmNIsUyhMC7lMQikeNI6XZZXx4TvPEAeqTuUNBcsbynjnkHsD9ewPworlC5aWaj4xescDvqVxfUJPeilzQnNc7yGQnV1dKN5BcM_1nlXlelhN-QLZYexbYyiyjZuwOBu74Pxsk9POe6LDWOqheU-FmN83Tkqn_ojA_kRGdmdRH3e-oyBZkh47DTp9fqJaQ1o3YR_L9HfZs1CrS8MmldqHuV7ZoQdMrRLxygPD4I_2sU_yFoXWDSpo1xiXxUotS7yzb9Hcjz6HMd3nx1FQa88pG-fx3wqdVokqLbjZtAdIg85GWNjxyrD7b8SZ0uAM7jxSamUjwnEixLSYRLN3FWEkReEqDAC-IdKk36r8rT1_rgX5-Ui5ukAZbzPGt8PGkGtWYIwFUZVaglx_HrDohRCkGJr_0tKwQlgj_rvY7-pb4fh4cgTVFsIIxBgJ6RruCf9lvN_Etf1eqUCFwgL-3L6Gvrk2G9KEY_lf6z71d4rcz2-c_69NTPmnxcNUWSWWbVhVE1rSyOvNOzJANE8U9wL1_d7GihqroY6nnMJI2jFBkIfex7Hm2WCF-2zcdXtJrun-u1aOj8M9CPLQXgyLs8vMN5UxlKVEu2RBlqbExibYIXaK_pHuOAARHVnvzhqn9sdbBs1QdZbt0u_t2vjjQJqhoi_zHW4KcSg3sc34LqFSVwNEuJokT96uDOszdLTl3__0kyOubPkmmGYvnPKRlE2b9_IaOprLVF5-JLvbeWdhJNDGxsQZqk6djzBIXvK9OjThY73lDNmQjzWbbUZImE7d5WmM46I91fOsVwx7Z97HZhMrQZduezNaigd8h9KHXj_WTw9sCa0lBfF1piWE4iLUk6id2OfRBGPW3lti1rHLI-X-R9Y5qPQRAd9v3ZdLC2JmwBT2Co6INU7s9mpsjv-_w6PldLVi8x3Iar3m4evz0HeTkbFkWmv6UUQYwH5fo4EiYzIGnntyenP6KCQnW73B6oKpBPb3Pcs8RkFfD22lBUbj1YOtCdnHtdUuZQrojsSBhKh_aWl6kwnxjrJMyTvFOkKZUN15PgDidTt2y3vL4DtX_aV9G3SbAgee2859TVgJqQ0ND1pXyvms-v4J9Blh_iHuOuV_CYnlaMcDLpckwGYapDiuJmg400qWOeHYFacdJB6Cbj2D5RO4-mzrer8fVFjQiWKH5BvabZ-wDCU7opq_969ZtjtRzIilyrTZeyLK0c7VcgmYGE3so9aj2bqnLdbYrchSyZ4tgpyj29IDKmnBbdRTXuOKO4s2U7XlixSFIDqEa1QQy02fLc16mTvNIKN64pM1hPz90qd-pxdJo3-Y7Z6p15r7Ag7qWzlbVIifCUHOp50g9YIl_3a__gmSYOezNJMzsHtNrXI6HLe4lu-sKmlLk8pQNxgVU6LKypJjgGnmyRpFRTYrggMdqbYTGmUUCNpVilohOl7tmuwm7LpjyZKu5CX5_1tde3UsKdKDEICk0qTMfY0aY3YRdE0e9J4ypzzvGosz-ZIa2QPW6yScuVX-97dimWtGi6K2HkpDA0sLE8UiRwiExar811KhJ6Jh6t2STZDHfyYpgtTX14OI0H4kRPCeq87_dqJQ6S875LGGa83Z7KTbjuLBRerbVJYzTmfJg7VdkfTiWe5lfjCpmFkuXujANbBRDFFrF2Ijg8t8ZOxOkmQD1eB3YH6cvVgCuPpcwKi2jE9sUNpDlrsiN34bjLb8Fm3cemUahH9ZCNouo8A3PKm670k3IywrzKx8ceLOOc4TSOHS2Vme0a6oHB-razdJyd5Dbxh1rt_QQuVmQXH3bH2SkZBQo2tf6I7mnk-Lxvlst1y_DMoqNLZZ7P8866WCLdOyBencUuNdgf6rVe-4RZUeVyRMaWsDtqtbnm3II3e4ZpUquljdLOWXKn-JyIgkNKyjwsz7zHVVZKDmZGWQ5LBpmswXfm3NEuPCkdFtLSXy0wW6J55GoiIfOat1X7O0pKQvWwpOaDo8Mcz9DcEiDG0hGw8srmB7miTI5sZ5xtSrNYpbM5M7X6BO3hU09nzoKtDYk-eRSDQEZ2EU2dU3dwrO3UC3YBCidwzrmEJQ3X7tYryXMR1qVXVgOBq2u9bwRNTpCXO2dy0MfnGd2re6MtTAUzF0X22DH6m9Tep3oHs0Yk7UeZsN8NSkc2Z2wwnc_nxMEGiwXs90ej-VDb231H9Eel1O8ZrlMhMsRl1YeHY0AMu9xCOchH4SQPj_PF3NlMobhZBd3xfGZa3oo5FaNBaveo3FoeeS9UohVL7fmctjjhtEyxYh2m2FohejSeD7Y0sWfX_JYqwtMumW4mZFGP-8tqt5SHh8XmoHdqeT4h94mpLiO0WYS; CrmOwinAuthC2=xOHL7haITGkML9jIzz0dimK0SxbZXgdg_BtTSLMjFrhp2M3wUF3B3iqJiwI8P_SZvBhrYbj2Tt2uHN6CSdnOJSJwy5HkSb6VRP_HOgGJ0g2T7NbfpyDHjbE0vjObkMiC7lQ0dsedq-OhvhuJsGW3HjqgG8sLoWkNnk0TCFCmsigdNspxEckGM-8gkKEf1CJgbu4JT1I4K5_z8MMiZKHJGHUnR6mKAd-fNXkObLTSW3HKH52NtPXDHgZWz5JKpn7nwqx-Cb1B-qBOl5vPps_gXnl2uy_1l8_91q-E1UdnQh_94_JALLgd8FzrOthoE0CRifM3BCWhYOsD58S9Xavqe9HnPI12fAK7PEUikmhQhccyFB0MGsDzLkeKbhqR4aNHR31Nv8obzXHj9-2cG18jMSvgGVen7KPWuvO5Ng0pzHoWaD0HTtET4ZIMqeg3J5EmWc6HP04Bj3sQZgA2hSXtlllioPKDyPfV3LdzwqoYEWZcD9F_1s8ifWk2x4e2s53l6rwQJ-vMHK1x_DvxYhmRXqvRcjGRJkqXt7FKN0O0rxA-if9_KUYkjXDUv8_BVqylmG9Pi7yxQ_fNrkms42Ok1TTLca1J4x4nvaOa1Zsy_bEUY7xH8zsjSn4yiPx313_IOp7tSIgAA;"
    }

    try:
        async with httpx.AsyncClient() as client:
            response = await client.post(url, headers=headers, content=BATCH_BODY.encode())
            response.raise_for_status()
            print("resp:", response.text)
    except httpx.HTTPStatusError as e:
        print(f"HTTP error: {e.response.status_code} - {e.response}")
    except Exception as e:
        print(f"Other error: {e}")

async def main():
    await fetch_batch_data()

if __name__ == "__main__":
    asyncio.run(main())
